import "AMLValidatorUtils.evl";

context CAEX!InterfaceClass
{
	constraint isDerivedFromAMLBaseClass
	{
		guard: self.isTypeOf(InterfaceClass)
	
		check
		{	
			debugOutput("isDerivedFromAMLBaseClass: " + self);
			
			var caexFile : CAEXFile;	
			var ergMap : Map;
			var bRet : Boolean;
			var objName : String;
			
			caexFile = self.getCAEXFile();
			
			if (not self.refBaseClassPath.isDefined() and not isBaseClassDerivedFrom("AutomationMLBaseInterfaces", self.name))
			{
				objName = self.name;
				bRet = false;
			}	
			else
			{	
				self.isClassChildOf(ergMap, "AutomationMLBaseInterfaces", "InterfaceClass");
				objName = ergMap.get("MissingObject");		
				bRet = not objName.isDefined();
			}			
			
			return bRet ;
		}
	
		message: ValidationExecution.addError(caexFile.filename, "", "", "IsDerivedFromAMLBaseClass", "Class not derived from AMLInterfaceclass: " + objName)		
	}
}


context CAEX!RoleClass
{
	constraint isDerivedFromAMLBaseRoleClass
	{
		check
		{	
			debugOutput("isDerivedFromAMLBaseRoleClass: " + self);
			
			var caexFile : CAEXFile;	
			var ergMap : Map;
			var bRet : Boolean;
			var objName : String;
			
			caexFile = self.getCAEXFile();
			
			if (not self.refBaseClassPath.isDefined() and not isBaseClassDerivedFrom("AutomationMLBaseRoles", self.name))
			{
				objName = self.name;
				bRet = false;
			}	
			else
			{	
				self.isClassChildOf(ergMap, "AutomationMLBaseRoles", "RoleClass");
				objName = ergMap.get("MissingObject");		
				bRet = not objName.isDefined();
			}
			
			return bRet ;
		}
	
		message: ValidationExecution.addError(caexFile.filename, "", "", "isDerivedFromAMLBaseRoleClass", "Class not derived from AMLRoleclass: " + objName)		
	}
}

context CAEX!SystemUnitClass
{
	constraint isRelatedToAMLBaseRoleClass
	{
		guard: self.isTypeOf(SystemUnitClass)
		
		check
		{
			debugOutput("isRelatedToAMLBaseRoleClass: " + self);		
			var caexFile : CAEXFile;		
			var ergMap : Map;
			var bRet : Boolean;
				
			caexFile = self.getCAEXFile();		
			
			bRet = self.isClassRoleOf(ergMap);
				
		
			return bRet;
		}
		
		message: ValidationExecution.addError(caexFile.filename, "", "", "IsRelatedToAMLBaseRoleClass", "SystemUnitClass without assigned AML Roleclass: " + self.name)	
	}
}


