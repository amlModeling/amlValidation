import "AMLValidatorUtils.evl";


context CAEX!CAEXObject
{
	constraint IsRefBaseClassPathValid
	{
		guard: self.isAMLBaseClass() and self.refBaseClassPath.isDefined()
		
		check
		{
			var pathMap = prepareRefBaseClassPath(self.refBaseClassPath);
			
			var errorText = self.checkRefBaseClassPath(pathMap, self.eContainer);
			
			return errorText = "";		
		}
		
		message
		{
			var allContainer : Map;
			var file : CAEXFile;
			getAllContainer(self, allContainer);
			file = allContainer.get("CAEXFile");
			
			return "File=" + file.filename + " - RefBaseClassPath not valid: " + errorText;			
		
		} 
	}
}


context CAEX!InternalElement
{
	constraint NoInheritanceOfClasses
	{
		check: not self.refBaseClassPath.isDefined()
		
		message: "Inheritance between classes and instances is not allowed"
	}



}